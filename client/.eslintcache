[{"D:\\nodejs-react-movie\\client\\src\\index.js":"1","D:\\nodejs-react-movie\\client\\src\\serviceWorker.js":"2","D:\\nodejs-react-movie\\client\\src\\components\\App.js":"3","D:\\nodejs-react-movie\\client\\src\\_reducers\\index.js":"4","D:\\nodejs-react-movie\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"5","D:\\nodejs-react-movie\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"6","D:\\nodejs-react-movie\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"7","D:\\nodejs-react-movie\\client\\src\\hoc\\auth.js":"8","D:\\nodejs-react-movie\\client\\src\\components\\views\\NavBar\\NavBar.js":"9","D:\\nodejs-react-movie\\client\\src\\components\\views\\Footer\\Footer.js":"10","D:\\nodejs-react-movie\\client\\src\\_reducers\\user_reducer.js":"11","D:\\nodejs-react-movie\\client\\src\\_actions\\user_actions.js":"12","D:\\nodejs-react-movie\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js":"13","D:\\nodejs-react-movie\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"14","D:\\nodejs-react-movie\\client\\src\\components\\Config.js":"15","D:\\nodejs-react-movie\\client\\src\\_actions\\types.js":"16","D:\\nodejs-react-movie\\client\\src\\components\\views\\Common\\GridCards.js":"17","D:\\nodejs-react-movie\\client\\src\\components\\views\\MovieDetail\\MovieDetail.js":"18","D:\\nodejs-react-movie\\client\\src\\components\\views\\Common\\MainImage.js":"19","D:\\nodejs-react-movie\\client\\src\\components\\views\\MovieDetail\\Sections\\MovieInfo.js":"20"},{"size":1187,"mtime":1596558498000,"results":"21","hashOfConfig":"22"},{"size":4951,"mtime":1596558498000,"results":"23","hashOfConfig":"22"},{"size":1185,"mtime":1609761014817,"results":"24","hashOfConfig":"22"},{"size":157,"mtime":1596558498000,"results":"25","hashOfConfig":"22"},{"size":5139,"mtime":1609610463404,"results":"26","hashOfConfig":"22"},{"size":2531,"mtime":1609783603819,"results":"27","hashOfConfig":"22"},{"size":6254,"mtime":1596558498000,"results":"28","hashOfConfig":"22"},{"size":1457,"mtime":1609610070297,"results":"29","hashOfConfig":"22"},{"size":1353,"mtime":1609610712030,"results":"30","hashOfConfig":"22"},{"size":398,"mtime":1609610786988,"results":"31","hashOfConfig":"22"},{"size":536,"mtime":1609610110047,"results":"32","hashOfConfig":"22"},{"size":1034,"mtime":1596558498000,"results":"33","hashOfConfig":"22"},{"size":701,"mtime":1609583747523,"results":"34","hashOfConfig":"22"},{"size":1095,"mtime":1596558498000,"results":"35","hashOfConfig":"22"},{"size":232,"mtime":1609585069591,"results":"36","hashOfConfig":"22"},{"size":166,"mtime":1596558498000,"results":"37","hashOfConfig":"22"},{"size":969,"mtime":1609783569484,"results":"38","hashOfConfig":"22"},{"size":2817,"mtime":1609783712041,"results":"39","hashOfConfig":"22"},{"size":1127,"mtime":1609783557089,"results":"40","hashOfConfig":"22"},{"size":1288,"mtime":1609777821722,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1cnr04v",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\nodejs-react-movie\\client\\src\\index.js",[],["85","86"],"D:\\nodejs-react-movie\\client\\src\\serviceWorker.js",[],"D:\\nodejs-react-movie\\client\\src\\components\\App.js",[],"D:\\nodejs-react-movie\\client\\src\\_reducers\\index.js",[],"D:\\nodejs-react-movie\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["87","88"],"import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {UserOutlined, LockOutlined}  from '@ant-design/icons';\nimport { Form, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }}/>}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","D:\\nodejs-react-movie\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["89"],"D:\\nodejs-react-movie\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["90","91"],"import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","D:\\nodejs-react-movie\\client\\src\\hoc\\auth.js",[],"D:\\nodejs-react-movie\\client\\src\\components\\views\\NavBar\\NavBar.js",[],"D:\\nodejs-react-movie\\client\\src\\components\\views\\Footer\\Footer.js",[],"D:\\nodejs-react-movie\\client\\src\\_reducers\\user_reducer.js",[],"D:\\nodejs-react-movie\\client\\src\\_actions\\user_actions.js",[],"D:\\nodejs-react-movie\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js",[],"D:\\nodejs-react-movie\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",[],"D:\\nodejs-react-movie\\client\\src\\components\\Config.js",[],"D:\\nodejs-react-movie\\client\\src\\_actions\\types.js",[],"D:\\nodejs-react-movie\\client\\src\\components\\views\\Common\\GridCards.js",["92"],"D:\\nodejs-react-movie\\client\\src\\components\\views\\MovieDetail\\MovieDetail.js",["93"],"D:\\nodejs-react-movie\\client\\src\\components\\views\\Common\\MainImage.js",[],"D:\\nodejs-react-movie\\client\\src\\components\\views\\MovieDetail\\Sections\\MovieInfo.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":75,"column":11,"nodeType":"100","messageId":"101","endLine":75,"endColumn":16},{"ruleId":"98","severity":1,"message":"102","line":80,"column":11,"nodeType":"100","messageId":"101","endLine":80,"endColumn":22},{"ruleId":"103","severity":1,"message":"104","line":27,"column":8,"nodeType":"105","endLine":27,"endColumn":10,"suggestions":"106"},{"ruleId":"98","severity":1,"message":"99","line":92,"column":11,"nodeType":"100","messageId":"101","endLine":92,"endColumn":16},{"ruleId":"98","severity":1,"message":"102","line":97,"column":11,"nodeType":"100","messageId":"101","endLine":97,"endColumn":22},{"ruleId":"98","severity":1,"message":"107","line":2,"column":15,"nodeType":"100","messageId":"101","endLine":2,"endColumn":18},{"ruleId":"103","severity":1,"message":"108","line":31,"column":8,"nodeType":"105","endLine":31,"endColumn":10,"suggestions":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'dirty' is assigned a value but never used.","Identifier","unusedVar","'handleReset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovie'. Either include it or remove the dependency array.","ArrayExpression",["112"],"'Row' is defined but never used.","React Hook useEffect has missing dependencies: 'crewInfo' and 'movieinfo'. Either include them or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [fetchMovie]",{"range":"118","text":"119"},"Update the dependencies array to be: [crewInfo, movieinfo]",{"range":"120","text":"121"},[974,976],"[fetchMovie]",[1049,1051],"[crewInfo, movieinfo]"]